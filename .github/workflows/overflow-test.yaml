on: [push]

defaults:
  run:
    # default failure handling for shell scripts in 'run' steps
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:
  overflow_test:
    runs-on: ubuntu-latest
    name: Test CIclops with summary overflow
    steps:
      - uses: actions/checkout@v3

      - name: Generate Test Summary
        uses: ./
        with:
          artifact_directory: example-artifacts/
          output_file: test-summary.md
          short_file: short.md
          alerts_file: alerts.txt
        # NOTE: it does not seem possible to pass $GITHUB_STEP_SUMMARY as a
        # regular file to the underlying script. Hence, we create a file and
        # in a later step write with >> $GITHUB_STEP_SUMMARY

      - name: Create local file that is bigger than GH limit
        run: |
          dd if=/dev/zero of=big-test-summary.md bs=1M count=2

      - name: Check full summary fits within GH limit
        # $GITHUB_STEP_SUMMARY will reject content over 1024 bytes
        # on exceeding, the workflow WILL FAIL and still count as success()
        # With this step, we do proper error flow, and fail if the limit would be
        # exceeded.
        id: check-overflow
        run: |
          size=$(stat -c '%s' big-test-summary.md)
          if  [ "$size" -gt 1024 ]; then
            echo "overflow=true" >> $GITHUB_OUTPUT
          fi
        # Here we force the "big test summary" to overflow GH limits, and we
        # create an output that further steps can leverage: steps.check-overflow.outputs.overflow

      - name: If the full summary fits within GH limits, use it
        # This step should be skipped, we expect
        if: ${{!steps.check-overflow.outputs.overflow}}
        run: |
          cat big-test-summary.md >> $GITHUB_STEP_SUMMARY

      - name: If the full summary is too big, use short version
        if: ${{steps.check-overflow.outputs.overflow}}
        run: |
          cat short.md >> $GITHUB_STEP_SUMMARY

      - name: If full summary is too big, archive it
        if: ${{steps.check-overflow.outputs.overflow}}
        uses: actions/upload-artifact@v3
        with:
          name: test-summary.md
          path: test-summary.md
          retention-days: 7

      - name: Create slack body with alerts
        run: |
          echo 'slack-message<<EOF' >> $GITHUB_OUTPUT
          cat alerts.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
